// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");

function getInitialState(param) {
  return /* record */[/* contents */Belt_MapString.empty];
}

function getOptionalUpdate(value, $$default) {
  if (Belt_Option.isSome(value)) {
    return value;
  } else {
    return $$default;
  }
}

function updatePresence(state, presenceUpdate) {
  var userId = presenceUpdate[/* user */0][/* id */0];
  var match = Belt_MapString.get(state[0], userId);
  var newPresence;
  if (match !== undefined) {
    var presence = match;
    newPresence = /* record */[
      /* user */presenceUpdate[/* user */0],
      /* roles */getOptionalUpdate(presenceUpdate[/* roles */1], presence[/* roles */1]),
      /* game */getOptionalUpdate(presenceUpdate[/* game */2], presence[/* game */2]),
      /* guildId */getOptionalUpdate(presenceUpdate[/* guildId */3], presence[/* guildId */3]),
      /* status */getOptionalUpdate(presenceUpdate[/* status */4], presence[/* status */4]),
      /* activities */getOptionalUpdate(presenceUpdate[/* activities */5], presence[/* activities */5]),
      /* clientStatus */getOptionalUpdate(presenceUpdate[/* clientStatus */6], presence[/* clientStatus */6])
    ];
  } else {
    newPresence = presenceUpdate;
  }
  state[0] = Belt_MapString.set(state[0], userId, newPresence);
  return /* () */0;
}

function updatePresences(state, presenceUpdates) {
  return $$Array.iter((function (presenceUpdate) {
                return updatePresence(state, presenceUpdate);
              }), presenceUpdates);
}

exports.getInitialState = getInitialState;
exports.getOptionalUpdate = getOptionalUpdate;
exports.updatePresence = updatePresence;
exports.updatePresences = updatePresences;
/* No side effect */
