// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var PayloadTypes$BsDiscord = require("./PayloadTypes.bs.js");
var PayloadParser$BsDiscord = require("./PayloadParser.bs.js");
var WebsocketClient$BsDiscord = require("./WebsocketClient.bs.js");

var Unsupported = Caml_exceptions.create("App-BsDiscord.Unsupported");

var ws = WebsocketClient$BsDiscord.Websocket[/* make */2](undefined, "wss://gateway.discord.gg/?v=6&encoding=json");

WebsocketClient$BsDiscord.Websocket[/* onOpen */4](ws, (function (param) {
        console.log("onOpen");
        return WebsocketClient$BsDiscord.Websocket[/* send */8](ws, JSON.stringify({
                        op: PayloadTypes$BsDiscord.opCodeToJs(/* Identify */2),
                        d: {
                          token: "Mzk4OTE3OTQzNTc0MTM0Nzk1.XRKUnA.KNRkoqpdhZVMEvD3ti0abVECf-k",
                          properties: {
                            $os: "darwin",
                            $browser: "bs-discord",
                            $device: "bs-discord"
                          }
                        }
                      }));
      }));

function handleMessage(message) {
  if (typeof message === "number" || message.tag) {
    return /* () */0;
  } else {
    setInterval((function (param) {
            return WebsocketClient$BsDiscord.Websocket[/* send */8](ws, JSON.stringify({
                            op: PayloadTypes$BsDiscord.opCodeToJs(/* Heartbeat */1)
                          }));
          }), message[0][/* heartbeatInterval */0]);
    return /* () */0;
  }
}

WebsocketClient$BsDiscord.Websocket[/* onMessage */7](ws, (function (ev) {
        console.log(ev.data);
        var message = PayloadParser$BsDiscord.parseSocketData(JSON.parse(ev.data));
        console.log("onMessage", message);
        handleMessage(message);
        return /* () */0;
      }));

WebsocketClient$BsDiscord.Websocket[/* onError */5](ws, (function (ev) {
        console.log("onError: " + (String(ev) + ""));
        return WebsocketClient$BsDiscord.Websocket[/* close */3](undefined, undefined, ws);
      }));

WebsocketClient$BsDiscord.Websocket[/* onClose */6](ws, (function (ev) {
        console.log("onClose: " + (String(ev) + ""));
        return /* () */0;
      }));

exports.Unsupported = Unsupported;
exports.ws = ws;
exports.handleMessage = handleMessage;
/* ws Not a pure module */
