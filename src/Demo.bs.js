// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var WebsocketClient$BsDiscord = require("./WebsocketClient.bs.js");

var jsMapperConstantArray = /* array */[
  0,
  1,
  2,
  3,
  4,
  6,
  7,
  8,
  9,
  10,
  11
];

function opCodeToJs(param) {
  return Js_mapperRt.toInt(param, jsMapperConstantArray);
}

function opCodeFromJs(param) {
  return Js_mapperRt.fromInt(11, jsMapperConstantArray, param);
}

var Unsupported = Caml_exceptions.create("Demo-BsDiscord.Unsupported");

function parseMessage(messageData) {
  var match = Belt_Option.getExn(opCodeFromJs(messageData.op));
  if (match !== 9) {
    throw Unsupported;
  } else {
    return /* Hello */[messageData.d];
  }
}

var ws = WebsocketClient$BsDiscord.Websocket[/* make */2](undefined, "wss://gateway.discord.gg/?v=6&encoding=json");

WebsocketClient$BsDiscord.Websocket[/* onOpen */4](ws, (function (param) {
        console.log("onOpen");
        return /* () */0;
      }));

WebsocketClient$BsDiscord.Websocket[/* onMessage */7](ws, (function (ev) {
        var message = parseMessage(JSON.parse(ev.data));
        console.log("onMessage", message);
        return /* () */0;
      }));

WebsocketClient$BsDiscord.Websocket[/* onError */5](ws, (function (ev) {
        console.log("onError: " + (String(ev) + ""));
        return WebsocketClient$BsDiscord.Websocket[/* close */3](undefined, undefined, ws);
      }));

WebsocketClient$BsDiscord.Websocket[/* onClose */6](ws, (function (ev) {
        console.log("onClose: " + (String(ev) + ""));
        return /* () */0;
      }));

exports.opCodeToJs = opCodeToJs;
exports.opCodeFromJs = opCodeFromJs;
exports.Unsupported = Unsupported;
exports.parseMessage = parseMessage;
exports.ws = ws;
/* ws Not a pure module */
