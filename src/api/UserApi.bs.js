// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Api$BsDiscord = require("./Api.bs.js");
var PayloadParser$BsDiscord = require("../PayloadParser.bs.js");

function getCurrentUser(param) {
  return Api$BsDiscord.requestGet("/users/@me", undefined, /* () */0).then((function (json) {
                return Promise.resolve(PayloadParser$BsDiscord.user(json));
              }));
}

function getUser(userId) {
  return Api$BsDiscord.requestGet("/users/" + (String(userId) + ""), undefined, /* () */0).then((function (json) {
                return Promise.resolve(PayloadParser$BsDiscord.user(json));
              }));
}

function updateCurrentUser(username, param) {
  var tmp = { };
  if (username !== undefined) {
    tmp.username = Caml_option.valFromOption(username);
  }
  var bodyJson = tmp;
  return Api$BsDiscord.requestPatch("/users/@me", Caml_option.some(bodyJson), /* () */0).then((function (json) {
                return Promise.resolve(PayloadParser$BsDiscord.user(json));
              }));
}

function getCurrentUserGuilds(before, after, limit, param) {
  return Api$BsDiscord.requestGet("/users/@me/guilds", Api$BsDiscord.createParams(/* :: */[
                    /* tuple */[
                      "before",
                      before
                    ],
                    /* :: */[
                      /* tuple */[
                        "after",
                        after
                      ],
                      /* :: */[
                        /* tuple */[
                          "limit",
                          Belt_Option.map(limit, (function (prim) {
                                  return String(prim);
                                }))
                        ],
                        /* [] */0
                      ]
                    ]
                  ]), /* () */0).then((function (json) {
                return Promise.resolve(Json_decode.array(PayloadParser$BsDiscord.guild, json));
              }));
}

function leaveGuild(guildId) {
  return Api$BsDiscord.requestDelete("/users/@me/guilds/" + (String(guildId) + "")).then((function (param) {
                return Promise.resolve(/* () */0);
              }));
}

function getUserDMs(param) {
  return Api$BsDiscord.requestGet("/users/@me/channels", undefined, /* () */0).then((function (json) {
                return Promise.resolve(Json_decode.array(PayloadParser$BsDiscord.channel, json));
              }));
}

function createDM(recipientId) {
  var body = { };
  body["recipient_id"] = recipientId;
  return Api$BsDiscord.requestPost("/users/@me/channels", Caml_option.some(body), /* () */0).then((function (json) {
                return Promise.resolve(Json_decode.array(PayloadParser$BsDiscord.channel, json));
              }));
}

function getUserConnections(param) {
  return Api$BsDiscord.requestGet("/users/@me/connections", undefined, /* () */0).then((function (json) {
                return Promise.resolve(Json_decode.array(PayloadParser$BsDiscord.userConnection, json));
              }));
}

exports.getCurrentUser = getCurrentUser;
exports.getUser = getUser;
exports.updateCurrentUser = updateCurrentUser;
exports.getCurrentUserGuilds = getCurrentUserGuilds;
exports.leaveGuild = leaveGuild;
exports.getUserDMs = getUserDMs;
exports.createDM = createDM;
exports.getUserConnections = getUserConnections;
/* No side effect */
