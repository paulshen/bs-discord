// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Api$BsDiscord = require("./Api.bs.js");
var PayloadParser$BsDiscord = require("../PayloadParser.bs.js");

function createMessage(channelId, content) {
  var body = { };
  body["content"] = content;
  return Api$BsDiscord.requestPost("/channels/" + (String(channelId) + "/messages"), Caml_option.some(body), /* () */0).then((function (json) {
                var message = PayloadParser$BsDiscord.message(json);
                console.log("createMessage", message);
                return Promise.resolve(message);
              }));
}

function createParams(params) {
  var filteredParams = /* array */[];
  List.iter((function (param) {
          var value = param[1];
          if (value !== undefined) {
            filteredParams.push(/* tuple */[
                  param[0],
                  value
                ]);
            return /* () */0;
          } else {
            return /* () */0;
          }
        }), params);
  return filteredParams;
}

function getMessages(channelId, around, before, after, limit, param) {
  return Api$BsDiscord.requestGet("/channels/" + (String(channelId) + "/messages"), createParams(/* :: */[
                    /* tuple */[
                      "around",
                      around
                    ],
                    /* :: */[
                      /* tuple */[
                        "before",
                        before
                      ],
                      /* :: */[
                        /* tuple */[
                          "after",
                          after
                        ],
                        /* :: */[
                          /* tuple */[
                            "limit",
                            Belt_Option.map(limit, (function (prim) {
                                    return String(prim);
                                  }))
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ]), /* () */0).then((function (json) {
                return Promise.resolve(Json_decode.array(PayloadParser$BsDiscord.message, json));
              }));
}

exports.createMessage = createMessage;
exports.createParams = createParams;
exports.getMessages = getMessages;
/* No side effect */
