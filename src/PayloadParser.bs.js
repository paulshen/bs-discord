// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var PayloadTypes$BsDiscord = require("./PayloadTypes.bs.js");

function channel(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, json),
          /* type_ */Json_decode.field("type", Json_decode.$$int, json),
          /* guildId */Json_decode.optional((function (param) {
                  return Json_decode.field("guild_id", Json_decode.string, param);
                }), json),
          /* name */Json_decode.optional((function (param) {
                  return Json_decode.field("name", Json_decode.string, param);
                }), json)
        ];
}

function user(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, json),
          /* username */Json_decode.field("username", Json_decode.string, json),
          /* discriminator */Json_decode.field("discriminator", Json_decode.string, json),
          /* avatar */Json_decode.field("avatar", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), json),
          /* bot */Json_decode.optional((function (param) {
                  return Json_decode.field("bot", Json_decode.bool, param);
                }), json),
          /* mfaEnabled */Json_decode.optional((function (param) {
                  return Json_decode.field("mfa_enabled", Json_decode.bool, param);
                }), json),
          /* locale */Json_decode.optional((function (param) {
                  return Json_decode.field("locale", Json_decode.string, param);
                }), json),
          /* verified */Json_decode.optional((function (param) {
                  return Json_decode.field("verified", Json_decode.bool, param);
                }), json),
          /* email */Json_decode.optional((function (param) {
                  return Json_decode.field("email", Json_decode.string, param);
                }), json),
          /* flags */Json_decode.optional((function (param) {
                  return Json_decode.field("flags", Json_decode.$$int, param);
                }), json),
          /* premiumType */Json_decode.optional((function (param) {
                  return Json_decode.field("premium_type", Json_decode.$$int, param);
                }), json)
        ];
}

function guildMember(json) {
  return /* record */[
          /* user */Json_decode.field("user", user, json),
          /* nick */Json_decode.optional((function (param) {
                  return Json_decode.field("nick", Json_decode.string, param);
                }), json),
          /* roles */Json_decode.field("roles", (function (param) {
                  return Json_decode.array(Json_decode.string, param);
                }), json)
        ];
}

function guild(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, json),
          /* name */Json_decode.field("name", Json_decode.string, json),
          /* icon */Json_decode.field("icon", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), json),
          /* splash */Json_decode.field("splash", (function (param) {
                  return Json_decode.optional(Json_decode.string, param);
                }), json),
          /* owner */Json_decode.optional((function (param) {
                  return Json_decode.field("owner", Json_decode.bool, param);
                }), json),
          /* ownerId */Json_decode.field("owner_id", Json_decode.string, json),
          /* members */Json_decode.optional((function (param) {
                  return Json_decode.field("members", (function (param) {
                                return Json_decode.array(guildMember, param);
                              }), param);
                }), json),
          /* channels */Json_decode.optional((function (param) {
                  return Json_decode.field("channels", (function (param) {
                                return Json_decode.array(channel, param);
                              }), param);
                }), json)
        ];
}

function unavailableGuild(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, json),
          /* unavailable */Json_decode.field("unavailable", Json_decode.bool, json)
        ];
}

function message(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.string, json),
          /* channelId */Json_decode.field("channel_id", Json_decode.string, json),
          /* guildId */Json_decode.field("guild_id", Json_decode.string, json),
          /* author */Json_decode.field("author", user, json),
          /* content */Json_decode.field("content", Json_decode.string, json),
          /* timestamp */Json_decode.field("timestamp", Json_decode.date, json),
          /* editedTimestamp */Json_decode.field("edited_timestamp", (function (param) {
                  return Json_decode.optional(Json_decode.date, param);
                }), json),
          /* tts */Json_decode.field("tts", Json_decode.bool, json),
          /* mentionEveryone */Json_decode.field("mention_everyone", Json_decode.bool, json),
          /* type_ */Json_decode.field("type", Json_decode.$$int, json)
        ];
}

function readyPayload(json) {
  return /* record */[
          /* sessionId */Json_decode.field("session_id", Json_decode.string, json),
          /* user */Json_decode.field("user", user, json),
          /* guilds */Json_decode.field("guilds", (function (param) {
                  return Json_decode.array(unavailableGuild, param);
                }), json)
        ];
}

function helloPayload(json) {
  return /* record */[/* heartbeatInterval */Json_decode.field("heartbeat_interval", Json_decode.$$int, json)];
}

function resumePayload(json) {
  return /* record */[/* trace */Json_decode.field("_trace", (function (param) {
                  return Json_decode.array(Json_decode.string, param);
                }), json)];
}

function parseSocketData(json) {
  var match = Belt_Option.getExn(PayloadTypes$BsDiscord.opCodeFromJs(Json_decode.field("op", Json_decode.$$int, json)));
  switch (match) {
    case 0 : 
        var match$1 = PayloadTypes$BsDiscord.dispatchMessageTypeFromJs(Json_decode.field("t", Json_decode.string, json));
        var tmp;
        if (match$1 !== undefined) {
          var match$2 = match$1;
          tmp = match$2 >= 975859715 ? (
              match$2 >= 1025039821 ? /* Resume */Block.__(3, [Json_decode.field("d", resumePayload, json)]) : /* MessageCreate */Block.__(2, [Json_decode.field("d", message, json)])
            ) : (
              match$2 >= 889912559 ? /* GuildCreate */Block.__(1, [Json_decode.field("d", guild, json)]) : /* Ready */Block.__(0, [Json_decode.field("d", readyPayload, json)])
            );
        } else {
          tmp = /* Unknown */0;
        }
        return /* Dispatch */Block.__(1, [tmp]);
    case 8 : 
        return /* InvalidSession */0;
    case 9 : 
        return /* Hello */Block.__(0, [Json_decode.field("d", helloPayload, json)]);
    case 1 : 
    case 2 : 
    case 3 : 
    case 4 : 
    case 5 : 
    case 6 : 
    case 7 : 
    case 10 : 
        return /* Unknown */1;
    
  }
}

exports.channel = channel;
exports.user = user;
exports.guildMember = guildMember;
exports.guild = guild;
exports.unavailableGuild = unavailableGuild;
exports.message = message;
exports.readyPayload = readyPayload;
exports.helloPayload = helloPayload;
exports.resumePayload = resumePayload;
exports.parseSocketData = parseSocketData;
/* No side effect */
